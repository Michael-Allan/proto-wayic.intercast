wayic.intercast/doc.task - Documentation in rough

    - favouring technological terms such as 'node' and 'link'
        ( as used in networking, or digital telecommunications engineering
        < not mathematical terms such as 'vertex' and 'edge'
            ( as used in graph theory

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Commitment patching`
    - commitment declaration by means of patching
        ( commitment declaration, http://reluk.ca/project/wayic/script/doc.task
    - purpose
        - to declare an intent to act on a way part of extracast origin
            - viz. to act on a way part *as* formalized by an extracast waybit
                - or to act on a variant of it
        - namely to declare an *intercast commitment declaration*
    - method
        - write a commitment jointer into the *variant waybit* of a patch
            ( commitment jointer, http://reluk.ca/project/wayic/script/doc.task
        - if the variant waybit varies nowhere else
            - or at least in no genetic content
                ( http://reluk.ca/project/wayic/origins/doc.task
            - then actually it will be a clone
                ( http://reluk.ca/project/wayic/origins/clone
    - rationale
        - one cannot, of course, write a commitment jointer into another's waycast
            - hence this method

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Design constraints`
    [ ⤓ minimal
        - the necessary form of an intercast network
        + waycast publication
            ( addendum to § Publication of a waycast, http://reluk.ca/project/wayic/cast/doc.task
            - waycast served to the Web with a response header of "Access-Control-Allow-Origin: *"
                ( cf. http://reluk.ca/project/wayic/lex/#web_serving
                - for sake of intercast referential jointing

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Import reference`
    * purpose
        - to refer to the import of an extracast way declaration document
        - to ensure its transport is complete or pending
    * classification
        - while formally intracast
            ( http://reluk.ca/project/wayic/cast/doc.task § Formally intracast reference
            - an import reference is functionally both inter and intracast
                ( § function
    * form
        ( [EBN]

          import reference = [ importer path ], '?', import query, [ '#', fragment ] ;

              importer path = "/way.xht" ;

              import query = { query parameter, '&' }, import parameter, { '&', query parameter } ;

                  query parameter =  ? as noted [QP] ?;

                  import parameter = "import=", nominally intercast document reference ;

                      nominally intercast document reference =
                        named waycast reference, '/', dotless relative path ;

                          named waycast reference = waycast name, { '.', waycast name } ;

                          dotless relative path = ? a relative-path reference without a dot segment,
                            as per https://tools.ietf.org/html/rfc3986#section-4.2, -3.3 ?;

              fragment = ? as per https://tools.ietf.org/html/rfc3986#section-3.5 ?;

    * example

          ?import=foo.bar/fiz/bop.xht#baz

            - the referent here is an element with *id* attribute 'baz'
                - which element is declared in a way declaration document at path baz/bop.xht
                    - which document is imported from waycast 'bar'
                        - which waycast name is defined in waycast 'foo'
                            - which waycast name is defined in the referring waycast
                            ( see § Waycast referencing § waycast_names
    * importer path
        - optional, it may be omitted
            ( as in the example above
            - for sake of clarity and convenience
                ( e.g. to reduce boilerplate clutter in wayscript
        - if omitted, then it is implied
            - runtime processors such as wayic.read will introduce it
        - its purpose is to fix the effective location of the imported document
            - e.g. as it appears in a browser's address bar
            - for sake of simplicity, clarity and processing efficiency
    * function
        - summary
            - imports an extracast way declaration document
            - refers to it, or to one of its elements
        - detail
            - guard cases
                - reference invalid if *named waycast reference* resolves to the referring waycast
                    ( self import
                - reference invalid if *nominally intercast document reference* does not resolve
                  to a way declaration document
            - does a referential transport based on the *nominally intercast document reference*
                ( § Referential transport
                - the referent being the "exported document" for this purpose
                    ( ./export
                - the result being the "imported document"
                    ( ./import
            - refers to the imported document, or to one of its elements
        = task to implement in wayic.emacs
            - fontifying the *named waycast reference* to distinguish it from the subsequent path
              for sake of clarity
        = task to implement in wayic.read

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Intercast link`
    ( ./intercast_link
    - typology
        * intercast link
            * referential joint
                ( [IR], http://reluk.ca/project/wayic/script/doc.task
            * genetic bitlink
                ( [IR], http://reluk.ca/project/wayic/origins/doc.task
                * transport bit trail
                * morphogenetic bitlink
                    ( [IR], http://reluk.ca/project/wayic/origins/doc.task

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Intercast network`
    ( ./intercast_network
    - link form: ⋯ intercast link ⋯
        ( intercast link or composite
    - typology
        ( including the name of the link form < LINK > for each type
        * intercast network
            < ⋯ intercast link ⋯ >
            * waycaster network
                < waycaster-waycast bond — intercast link — waycaster-waycast bond >
            * intercast way network
                < referential joint >
            * bit clade
                < genetic bitlink >
                ( http://reluk.ca/project/wayic/origins/doc.task
            * morphogenetic bit forest
                < morphogenetic bitlink >
                ( http://reluk.ca/project/wayic/origins/doc.task

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Intercast way network`
    ( ./intercast_way_network
    < see also § Intercast way network, http://reluk.ca/project/wayic/origins/doc.task
    < surtype: intercast network
    - link form: referential joint

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    ?redaction *patch* element
    < surtype: morphogenetic bitlink
        ( http://reluk.ca/project/wayic/origins/doc.task
    + function
        - to declare a variant waybit
            - one whose genetic content differs from other members of the waybit population
                ( http://reluk.ca/project/wayic/origins/genetic_content
        - declares a genetic link
        - replaces the content of the original waybit (if any) wherever in the way model it occurs
            ( no matter how remote from the waycast, how deep (indirect) the linkage
            - with that of the variant
        - effective iff:
             & the original waybit (referent of the *original* attribute)
               and/or the variant waybit (the content, or referent of *href*) is on way
                ( http://reluk.ca/project/wayic/script/on_way
                - so proper to the waycaster
                ( else it is weird
             & the waycast declares no other variant waybit of the same population
    + form
        - formal summary in genetic terms

                  original waybit → variant waybit

        - elemental form

                · <patch [way:original=ORIGINAL-REF]
                ·     [way:population='POPULATION-ID'] [href='VARIANT-REF']>
                ·     [VARIANT]
                ·     </patch>

            - genetic attributes
                - at least one of these must be declared
                * *original* attribute
                    < way:original, namespace data:,wayscript
                    - a subjoining waybit reference
                        ( http://reluk.ca/project/wayic/script/doc.task § Subjoining waybit reference
                    - function: § Genetic link § subjoining waybit reference
                    - unless this is constrained to an import reference
                        = correct § Intercast commitment declaration
                            - which assumes so
                * *population* attribute
                    < way:population, namespace data:,wayscript
                    = rename 'locus'
                        - the genetic connotation is offset by the non-genetic
                            - and by the (expected) low usage of this attribute
                        - referring to wayic.origins § Locus
                    - identifies the variant waybit's population
                    - default value: normalized ORIGINAL-REF
            - variant waybit, declared by either of:
                * inline VARIANT
                * *href* attribute
                    < no namespace
                    - a fragmented, formally intracast reference
                        ( http://reluk.ca/project/wayic/cast/doc.task § Formally intracast reference
                        - intracast
                            - thus proper to the waycaster
                            - thus complying with design constraints
                                ( http://reluk.ca/project/wayic/cast/doc.task
                                    ( § Design constraints § relative referencing bounded by the waycast
                    - locates and refers to the *variant waybit*
    + placement
        - in an on-way document
            - which is any document that contains an on-way element
            ( http://reluk.ca/project/wayic/script/on_way
        - thereby easily detectable by processors

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Intercast commitment declaration`
    - a commitment declaration introduced by commitment patching

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    ?redaction Referential transport
    = redact ↓
    = define after other 'referential' §§
        - perhaps with the help of a term document
        - considering also ._/transport

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    ?redaction Transport bit trail
    < surtype: genetic bitlink
        ( http://reluk.ca/project/wayic/origins/doc.task
    - each imported waybit, if on way, is thereby ...
        ( on way, that is, in the importing waycast
    - form
        - formal summary in genetic terms

                  exported waybit → imported waybit

        - elemental form

                  . . .

  —— SALVAGE ——
    + as a genetic link
        - salvaged from removed § Intercast referential joint
        * function
            ( as a genetic link
            - defines the referent waybit to be the synchronic (infrabutting) child
              that is introduced to the (referring) waycast as an effect of the referential joint
                ( http://reluk.ca/project/wayic/script/doc.task § Referential jointing § effect
                = correct to imported image
            - declares the referring waybit to be a member of the population
              of the referent waybit off in the referent waycast
                - and a clonal child of the referent waybit
            - asserts that the referent waybit is a member of a population
                - if the referent waybit declares no population itself
                    - nor implies any by its declared form
                    - then it is hereby declared a member (the founding member) of population L
                    - where L is the normalized value of the reference
                        ( namely the jointer's *join* attribute, a subjoining waybit reference

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    ?redaction Population
    < surtype: intercast network
    - a population is a group of waybits interrelated by nominal lines of descent
    - every on way waybit is a member of a population of positive size
    - purpose
        - competitive and collaborative way definition among waycasters
            ( akin to recombinant text in Textbender and Votorola
        - efficient editorial search among variant waybits
        - formation of way consensus
            ( akin to a Votorola poll
    - network link form: genetic link
    - identifier
        - subjoining waybit reference
        - only because "most genetic links" so refer to it
            ( § Genetic link § general form
            - otherwise it could be a free form string
    [ typical practice
        + surface variation
            - pasting the variant content directly in line, no referential jointing
            = write this
                - situation
                    - you already have waybit
                    - you want to declare it to be a variant waybit
                - method
                    - an empty *patch* element
                        - typically placed within the waybit
                        - with an *href* attribute referencing the waybit
                        - and possibly other attributes
                            ( as per § subsurface variation
        + shallow variation
            - subsurface variation of an intercast referential jointer's referent
            - form, either of
                | generalized subsurface variant
                    ( § subsurface variation
                | surface variant
                    = write this
                        - replacing the referential jointer with a surface variant
                            ( § surface variation
                        - it ends up formed as such
        + subsurface variation
            ( generalized form
            - changing the content of an extracast waybit that is reachable
              by intercast referential jointing
                - at any depth in the intercast way network
                - by making a variant of it
/           - that extracast waybit will become the nominal genetic parent of your newly made variant
            - make an empty *patch* element
                ( § *patch* element
                - preferably near to the intercast referential jointer that refers (however indirectly)
                  to that extracast waybit
            * declaring the original waybit
                - add to the patch a *original* attribute that refers directly to that extracast waybit
            * declaring the population
                - skip this if the original waybit is a member of no waybit population
                    - instead letting the population default to ORIGINAL-REF
                - add to the patch a way:population attribute of POPULATION-ID
                  to identify the original waybit's population
                    - where the value POPULATION-ID is declared in the original waybit
                        - or inferrable from it
                        ( typically a tool will tell you the value
            * declaring the variant content
                - copy the genetic content of the original waybit
                    - typically you would use a tool to extract only the genetic portion
                    ( http://reluk.ca/project/wayic/origins/doc.task § Genetic content
                - paste it
                    - either in the *patch* element
                    - or elsewhere, referring to it by adding an *href* attribute
                - edit the pasted content to introduce the actual variation
        + delegation to another waycaster
            - the other waycaster has declared a variant of your waybit, which you like
            - you no longer want to maintain this waybit yourself
            - replace it with an intercast referential joint direct to the variant
              and let the other waycaster maintain it

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Waycaster network`
    < surtype: intercast network
    - link form: waycaster-waycast bond — intercast link — waycaster-waycast bond
        - waycaster-waycast bond: the one-to-one relation between waycaster and waycast
    - purpose
        - structural support for a community of waycasters
        - collaborative way definition among waycasters

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    ?redaction Waycast referencing
    - referring to a waycast
    + reference typology
        * waycast location
            - a URI reference
                ( URI reference, https://tools.ietf.org/html/rfc3986#section-4.1
            * extracast waycast location
                - a URI
                    ( URI, https://tools.ietf.org/html/rfc3986#section-3
            * waycast public identifier
                - a URI in normal form
                    ( Normalization and comparison, https://tools.ietf.org/html/rfc3986#section-6
                < as per wayic.cast § Publication of a waycast § waycast public identifier
                    ( http://reluk.ca/project/wayic/cast/doc.task
        * waycast name
            - a *waycast name* from a valid *declaration* of waycast_names
    + waycast_names
        * purpose
            - in wayscript
                - concision for clarity
                - symbolic indirection for consistency and ease of maintenance
        * place
            - waycast.json
                ( http://reluk.ca/project/wayic/cast/doc.task § Configuration of a waycast
        * form
            ( [EBN], exclusive of the whitespacing variations allowed by JSON

              'waycast_names: {', [ declaration list ], '}' ;

                  declaration list = declaration | declaration, ',', declaration list ;

                  declaration = waycast name, ': "', waycast location | waycast name, '"' ;

                  waycast name = ? string of one or more US-ASCII characters,
                    each a letter or underscore ?;

                  waycast location = ? as per § reference typology § waycast location ?;

        * examples

                  waycast_names: {
                      foo: "http://foo.net/waycast/",
                      bar: "http://bar.com/cast/",
                      zog: "http://zog.org/waycast/",
                      end: "foo",
                      means: "bar" }

            - or, equivalently:

                  waycast_names: {
                      foo: "http://foo.net/waycast/",
                      bar: "http://bar.com/cast/",
                      zog: "http://zog.org/waycast/",
                      end: "http://foo.net/waycast/",
                      means: "http://bar.com/cast/" }

        * function
            - to bind waycast names to locations
                ( see § reference typology §§ waycast name, waycast location
            - for each *declaration* D
                - for the *waycast name* N on its left side
                    - N binds (whether directly or indirectly) to a *waycast location*
                      on the right side of just one valid *declaration*
                    - N appears on the left side of no *declaration* but D
                - otherwise D is invalid


////////////////////////////////////////////////////////////////////////////////////////////////////////
// N o t e s
/
   [EBN]  Extended Backus-Naur syntax notation, ISO/IEC 14977.
            ( http://standards.iso.org/ittf/PubliclyAvailableStandards/index.html
            ( https://www.cl.cam.ac.uk/~mgk25/iso-14977.pdf
            ( summary, https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form

   [IR] · Applies only for those instances which are based on an import reference.

   [QP] · Query parameter: an ampersand delimited name-value tuple in the query component
          of a URI reference, as defined for content type *application/x-www-form-urlencoded*.
            ( *application/x-www-form-urlencoded* parsing
                ( https://url.spec.whatwg.org/#urlencoded-parsing
            ( query, https://tools.ietf.org/html/rfc3986#section-3.4



                                          Copyright © 2018 Michael Allan and contributors.  Licence MIT.
